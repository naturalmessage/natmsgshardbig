# These are example configuration files.
#
# Installation instructions:
# Note: installation takes a long time... generating
# the server keys properly requires an offline computer
# so that the offline PRIVATE SIGN key is never on an computer that
# can reach the Internet (so that nobody can steal your
# offline key).
#
# The install procedures are for Cent OS 7 -- not Cent OS 6.
# (FreeBSD will be tested next)
#   1) generate server keys using naturalmessage/natmsgv 
#      from github.
#      * You should generate the key using a computer 
#        that has never been on a network and will never
#        be on the network, like a new Raspberry Pi,
#      * If you really can't do this, you should at least 
#        boot from a live Linux DVD and generate the 
#        keys like that with the computer disconnected
#        from any network -- then save on SD cards with
#        several copies of the offline PRIVATE key stored where
#        they will never be on a networked computer.
#   2) Use the offline PUBLIC SIGN key (generated in Step 1)
#      to find the sha384 fingerprint of your server.
#      Example:
#          openssl dgst -sha384 private/20150204/NMTokyoSHARD2015JanOfflinePUBSignKey.key \
#            |tr "[[:lower:]]" "[[:upper:]]"
#   3) Enter fingerprint in UPPER CASE in the SERVER_FINGERPRINT
#      line below.
#   4) Send your server information to the natural message
#      web admin (Robert Hoot): online public key, offline public key
#   5) Fix the IP address in the server.socke_host below.
#   6) If you use the online web form, check the GPG 
#      webmaster_enc_id line below.
#   7) check the database IP and password at the bottom of this file.
#   8) Check the user and group id of teh natmsg user ID...
#      That will be used to drop from root privileges after
#      the server is attached to port 443.  You can
#      choose a different port if you want to... 4430 is one.
#        dropto_uid=997
#        dropto_gid=996
#   9) Enter the path to your ssl key at the bottom of this
#      file.  You can create a self-signed cert if you
#      want to.  The clients can perform server verification
#      without SSL, although some clients might not 
#      perform that extra validation.
#
# Include only the settings that are most likely
# to change between servers: IP, port, fingerprint
# I don't think that this will work in a file because teh 
# array objects will not be understood from this file.
[global]
LOGFILE='natmsg_shardsvr_00_00_20.log'

natmsg_root='/var/natmsg' # no trailing slash
server.socket_host='106.187.53.102'
server.socket_port=4430
# openssl dgst -sha384 private/20150204/NMTokyoSHARD2015JanOfflinePUBSignKey.key |tr "[[:lower:]]" "[[:upper:]]"
# then convert to upper case
SERVER_FINGERPRINT='28BD17844F84A3D4FAD67940A87381E2233B6C2BFA16622F60431DC42A8A3B7A3D861F0E661497E0E483AF9C9ABF5187'
##SERVER_FINGERPRINT='77F15BF4A8372E92EEF634D2147EF863F064C2D0'
ONLINE_PUB_SIGN_KEY_FNAME= 'private/20150204/NMTokyoSHARD2015JanOnlinePUBSignKey.key'
ONLINE_PRV_SIGN_KEY_FNAME= 'private/20150204/NMTokyoSHARD2015JanOnlinePRVSignKey.key'
ONLINE_PUB_ENC_KEY_FNAME=  'private/20150204/NMTokyoSHARD2015JanOnlinePUBEncKey.key'
ONLINE_PRV_ENC_KEY_FNAME=  'private/20150204/NMTokyoSHARD2015JanOnlinePRVEncKey.key'
OFFLINE_PUB_SIGN_KEY_FNAME='private/20150204/NMTokyoSHARD2015JanOfflinePUBSignKey.key'

# If you use the online web form, enter the
# GPG key of your key as showen in
#   gpg --list-keys 
# OR for the full code:
#   gpg --list-keys --with-commas
webmaster_enc_id='7C71BFB92DB01EE6'
#
# max body size is enforced in a low-level
# cherrypy module, and includes all headers
# and other junk:
server.max_request_body_size=5246000
server.max_request_header_size=2000
MAX_SHARD_SIZE_BYTES=5242880
# gid and uid are the numeric group and user id 
# that will be used to run cherrypy after
# the DropPrivileges command drops out of
# root. Check priv nbrs like this (shell command)
#   touch junkfile
#   sudo chown natmsg:natmsg junkfile
#   ls -n junkfile
# (user id nbr shows first, then group id nbr)
dropto_uid=997
dropto_gid=996


# If you run your cherry py on the same machine as the 
# postgresql database, then you can leave 
# the IP at 127.0.0.1, otherwise change
# it to a domain name or IP address.
HOSTNAME='127.0.0.1' # for postgresql database
DBNAME='shardsvrdb' # test or exp extension is optional
DB_UNAME='shardwebserver'
DB_PW='YOUR PASSWORD HERE'


##	'error_page.404': '/var/natmsg/html/notfound.html' ,
server.ssl_certificate='/var/natmsg/private/ca.crt'
server.ssl_private_key='/var/natmsg/private/ca.key'
shard_encrypt_version=1
